from tkinter import *
import tkinter.messagebox
from tkinter import ttk
import datetime
import time
#added by COSA141
from time import strftime

win = Tk()
win.title("GUI Sandbox")
win.geometry("800x500")
now_date = datetime.date.today().strftime('%d%b%y').upper()
now_hour = time.localtime().tm_hour
now_min = time.localtime().tm_min
now_sec = time.localtime().tm_sec
# Multiple log_timestamp var tries below, see def get_log_timestamp() below for concatenation attempts
# log_timestamp = datetime.datetime.combine(datetime.date.today(), datetime.time)

################################################


def doNothing_image():
    print(now_date + ':' + ' ' + 'Okay, okay, I won\'t insert your image...')


def doNothing_print():
    print(now_date + ':' + ' ' + 'Okay, okay, I won\'t print for you...')


def doNothing():
        print(now_date + ':' + ' ' + 'Okay, okay, I won\'t...')

# Prints log when status bar combobox is adjusted by user
def getstatusformatFunc(event):
    print(now_date + ':' + ' ' + 'The status bar has been reformatted')


# def get_log_timestamp():
    # Attempt to format the output of this def to str so def getstatusformatFunc(event):
    # would actually produce custom timestamp (HHMMSSL after the date) when line 106 combobox is executed
    # print.str.format(now_date + ' ' + now_hour + now_min + now_sec + 'L:' + 'Status bar format updated')

################################################
# Establish Menu: Tkinter already knows to put the menu at the top of the program
menu = Menu(win)
win.config(menu=menu)

################################################
# Drop down 1
subMenu = Menu(menu)
menu.add_cascade(label='File', menu=subMenu)
subMenu.add_command(label='New Project...', command=doNothing)
subMenu.add_command(label='New...', command=doNothing)
subMenu.add_separator()
subMenu.add_command(label='Exit', command=win.quit)

################################################
# Drop down 2 / Edit
editMenu = Menu(menu)
menu.add_cascade(label='Edit', menu=editMenu)
editMenu.add_command(label='Redo', command=doNothing)

################################################
# Drop down 3 / Help

def openAbout():
    tkinter.messagebox.showinfo('About Tkinter Sandbox', '''Welcome to the Tkinter Sandbox! This program is being built to hold and practice
Python GUI techniques and any other Python features of interest.''')
    print(log_datetime + ' Opened \'About\' Modal from help menu')


def openReferences():
    tkinter.messagebox.showinfo('Tkinter Youtube Channels', '''Programming Knowledge
Python Codex
Corey Schafer
The New Boston
sentdex''')

editMenu = Menu(menu)
menu.add_cascade(label='Help', menu=editMenu)
editMenu.add_command(label='About', command=openAbout)
editMenu.add_command(label='References', command=openReferences)

################################################
# Toolbar

toolbar = Frame(win, bg='black')

# Insert Image Button
insertButt = Button(toolbar, text='Insert Image', command=doNothing_image)
insertButt.pack(side=LEFT, padx=2, pady=2)

# Print Button
printButt = Button(toolbar, text='Print', command=doNothing_print)
printButt.pack(side=LEFT, padx=2, pady=2)

toolbar.pack(side=TOP, fill=X)


################################################
# Status Bar

status = Label(win, text='Preparing  to do nothing...', bd=1, relief=SUNKEN, anchor=W)
status.pack(side=BOTTOM, fill=X)

statusOptionDropdown = ttk.Combobox(status, values=['SUNKEN',
                                                    'RAISED',
                                                    'FLAT',
                                                    'GROOVE',
                                                    'RIDGE'])

statusOptionDropdown.current(0)
statusOptionDropdown.pack(side=RIGHT, padx=2, pady=2)
statusOptionDropdown.bind("<<ComboboxSelected>>", getstatusformatFunc)

################################################


################################################

#COSA141's code: for displaying a clock on App

def time():
    string = strftime('%H:%M %p') #only doing minutes not seconds
    lbl.config(text=string)
    lbl.after(1000, time) #so it refreshes
    
lbl = Label(toolbar,background = 'black',foreground = 'white')
lbl.pack(side=RIGHT)

time()

################################################

win.mainloop()
